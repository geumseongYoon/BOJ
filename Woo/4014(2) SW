#define _CRT_SECURE_NO_WARNGINS

#include <stdio.h>

int testcase,N,X,answer;

int index[21][21];
int visit[21][21];



int sol(int y, int x)
{
	if (x == N - 1) {
		answer += 1;
		return 0;
	}

	//한칸씩이동
	if (index[y][x] == index[y][x + 1])
		sol(y, x + 1);


	//오른쪽이 높을때
	else if ((index[y][x + 1] - index[y][x]) == 1 && (x - (X - 1)) >= 0)
	{

		for (int i = 0; i < X; i++)
		{
			if (visit[y][x - i] == 1 || index[y][x + 1] - index[y][x - i] != 1)
			{
				return 0;
			}

		}
		for (int i = 0; i < X; i++)
			visit[y][x - i] = 1;
		sol(y, x + 1);
		for (int i = 0; i <X; i++)
			visit[y][x - i] = 0;

	}
	//왼쪽이 높을때
	else if ((index[y][x + 1] - index[y][x]) == -1 && (x + 1 + X - 1) <= N)
	{
		for (int i = 1; i <= X; i++)
		{
			if (visit[y][x + i] == 1 || index[y][x] - index[y][x + i] != 1)
			{
				return 0;
			}

		}
		for (int i = 1; i <= X; i++)
			visit[y][x + i] = 1;

		sol(y, x + 1);

		for (int i = 1; i <= X; i++)
			visit[y][x + i] = 0;
	}
	return 0;
}


int sol2(int y, int x)
{
	if (y == N - 1) {
		answer += 1;
		return 0;
	}

	//한칸씩이동
	if (index[y][x] == index[y + 1][x])
		sol2(y + 1, x);


	//아래쪽이 높을때
	else if ((index[y + 1][x] - index[y][x]) == 1 && (y - (X - 1)) >= 0)
	{
		for (int i = 0; i < X; i++)
		{
			if (visit[y - i][x] == 1 || index[y + 1][x] - index[y - i][x] != 1)
				return 0;
		}

		for (int i = 0; i < X; i++)
			visit[y - i][x] = 1;

		sol2(y + 1, x);

		for (int i = 0; i < X; i++)
			visit[y - i][x] = 0;
	}

	//위가 높을때
	else if ((index[y + 1][x] - index[y][x]) == -1 && (y + 1 + X - 1) <= N)
	{


		for (int i = 1; i <= X; i++)
		{
			if (visit[y][x + i] == 1 || index[y][x] - index[y + i][x] != 1)
			{
				return 0;
			}
		}
		for (int i = 1; i <= X; i++)
			visit[y + i][x] = 1;
		sol2(y + X, x);
		for (int i = 1; i <= X; i++)
			visit[y + i][x] = 0;

	}


	return 0;
}




int main()
{
	scanf("%d", &testcase);

	for (int T = 1; T <= testcase; T++)
	{
		answer = 0;

		scanf("%d %d", &N, &X);
		for (int i = 0; i < N; i++)
			for (int j = 0; j < N; j++)
				scanf("%d", &index[i][j]);

		//가로
		for (int i = 0; i < N; i++)
			sol(i, 0);

		//새로 스타트
		for (int i = 0; i < N; i++)
			sol2(0, i);


		printf("#%d %d\n", T, answer);
	}
}
